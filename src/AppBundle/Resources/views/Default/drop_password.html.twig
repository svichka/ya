{% extends 'AppBundle:Default:base.html.twig' %}
{% trans_default_domain "auth" %}

{% block title %}Востановление{% endblock %}

{% block body %}
  <form class="form" action="{{ path('recover_password_page') }}" method="post" id="form_restore">
    <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">
    {% if error is defined %}
    <div class="form__wrapper form__wrapper_align_center">
      <div class="form__row">
        <div class="form__box" style=" max-width: 400px;margin: auto;margin-bottom: 1em;">
          <label class="form__label" style="color: red;">
            {{ error.messageKey|trans(error.messageData, 'auth') }}
          </label>
        </div>
      </div>
      {% endif %}
      <div class="form__wrapper form__wrapper_align_center">
        <div class="form__row">
          <div class="form__box">
            <label class="form__label" for="email">E-mail *</label>
            <input class="form__input form__input_height_high form__input_align_center" name="login"
                   type="email" id="login" value="" placeholder="mail@mail.com" required>
          </div>
          <div class="restore-helper"></div>
        </div>
        <div class="form__row">
          <div class="form__box form__box_button form__box_mt_none">
            <button class="button" type="submit"><span class="button__text">Востановить</span></button>
          </div>
        </div>
      </div>
    </div>
  </form>

{% endblock %}

{% block stylesheets %}
  {{ parent() }}
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
    $(function () {

      var options_submit_restore_password = {
        beforeSubmit: show_request_restore_password,  // pre-submit callback
        success: show_response_restore_password,  // post-submit callback
        url: '{{ path('recover_password_page') }}',         // override for form's 'action' attribute
        type: 'post',        // 'get' or 'post', override for form's 'method' attribute
        dataType: 'json',        // 'xml', 'script', or 'json' (expected server response type)
        clearForm: false,       // clear all form fields after successful submit
        resetForm: false        // reset the form after successful submit
      };

      $('#form_restore').ajaxForm(options_submit_restore_password);

      function show_request_restore_password(formData, jqForm, options) {
        var helper = $('.restore-helper');
        helper.css('display', 'none');
        return true;
      }

      function show_response_restore_password(responseText, statusText, xhr, $form) {
        var helper = $('.restore-helper');

        if (responseText.status === 200) {
          $.arcticmodal('close');
          $('.free-text-h').html('Восстановление пароля');
          $('.free-text').html('Новый пароль отправлен Вам на указанный адрес.<br>' +
            'Если письмо не пришло сразу, пожалуйста, проверьте папку «Спам».');
          $('#freeModal').arcticmodal(favSyr.popup.options);
        } else {
          helper.html(responseText.error.messageKey);
          if (responseText.error.messageKey === 'User not found') {
            helper.html("Пользователь с указанным адресом электронной почты не найден");
          }
          helper.css('display', 'inline-block');
        }
      }
    });
  </script>
{% endblock %}